#!/bin/sh
# Change ALSA Master volume and optionally show notification
#
# Requirements:
# 	amixer
# 	notify-send (libnotify)

# Set shell options
set -ef

# Settings:
# simple mixer device
mixer="Master"
# notification timeout
timeout=500
# programm names
NOTIFY="notify-send"
SOUND="mpg123 -q"

# display help screen
usage() {
	echo "Usage: $0 [-h | --help] [-n] [-s FILE] VOLUME_SETTING"
	echo "  -n          Display notifiction"
	echo "  -s          Play a sound when changing volume"
	echo "  -h, --help  Show this message"
}

# initialize variables
curr_settings=
notification=
sound_file=
vol_setting=
curr_volume=

# parse commandline parameters
[ "$#" -eq "0" ] && usage && exit 1
while [ "$#" -gt "0" ]; do
	case "$1" in
		-n) notification=1;;
		-s) sound_file="$2"; shift;;
		-h|--help) usage; exit 0;;
		-*) usage; exit 1;;
		 *) vol_setting="$1";;
	 esac
	 shift
 done

# set volume
amixer -q set $mixer "$vol_setting"
[ -n "$sound_file" ] && $SOUND "$sound_file"

# Get the device settings.
curr_settings=$(amixer get $mixer)

if [ -n "$notification" ]; then
	# Get volume
	curr_volume="$(echo $curr_settings | egrep -o '[0-9]+%')"
	curr_volume="${curr_volume%\%}"

	# Send notification; check whether the device is muted or not.
	if ( echo $curr_settings | grep -q "\[off\]" ); then
		$NOTIFY -t $timeout -u low -h "int:value:$curr_volume" "Sound volume" "ALSA $mixer [MUTE]"
	else
		$NOTIFY -t $timeout -u low -h "int:value:$curr_volume" "Sound volume" "ALSA $mixer"
	fi
fi
